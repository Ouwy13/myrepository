def Teoria():
    # Lista dento de Listas
    teste = list()
    teste.append('Gustavo')
    teste.append(40)
    galera = list()
    # Uma lista dentro de outra lista
    '''galera.append(teste) ''' # Sem a copia
    galera.append(teste[:]) # Feito a copia
    # Quando não é feito a copia qualquer alteração
    # altera tbm os valores
    '''Saida: [['Maria', 21], ['Maria', 21]]'''

    # Modificando os itens do teste
    teste[0] = 'Maria' 
    teste[1] = 21
    galera.append(teste[:])
    print(f'{galera}')
    '''Saida: [['Gustavo', 40], ['Maria', 21]] '''

def Teoria2():
    # Lista dentro de lista
    galera = [['Jonas', 17],['Ana', 21],['Luiz',32],['Juana',12]]
    print(galera)
    print(galera[0]) 
    print(galera[0][0]) 
    print(galera[2][1]) 

    # Exibir cada conjunto de itens 
    for pessoa in galera:
        print(pessoa)
    # Exibir cada conjunto de itens determinando qual
    for pessoa in galera:
        print(f'{pessoa[0]} tem {pessoa[1]} anos')

def Teoria3():
    galera = list()
    dados = list()
    # Salvando dados em galera
    for c in range (0,3):
        dados.append(str(input('Nome: ')))
        dados.append(int(input('Idade: ')))
        galera.append(dados[:]) # Galera recebe uma copia dos dados
        dados.clear() # Limpa dos dados p. recomeça
    
    # Exibindo dados da galera
    for pessoa in galera: 
        print(f'{pessoa[0]} tem {pessoa[1]} anos.')

    # Exibindo maiores de 18 anos
    m18 = 0
    for pessoa in galera:
        if pessoa[1] >= 18:
            print(f'{pessoa[0]} tem mais de 18 anos')
            m18 +=1
    print(f'Temos {m18} maiores de idade')

def Ex84():
    v = cadast = 0
    menpeso = maipeso = 0
    dados = list()
    pessoas = list()
    
    while True:
        dados.append(str(input(f'Qual o nome da {v+1} pessoa: ')).strip())
        cadast +=1
        v +=1
        while True:
            try:
                dados.append(int(input('Qual seu peso: ')))
                break
            except ValueError:
                print('Informe somente peso!')
        while True:
            cond = str(input('Continuar[S/N]: ')).strip().upper()[0]
            if cond in 'SN':
                break
        pessoas.append(dados[:])
        dados.clear()
        if cond == 'N':
            break
    
    for pos,pessoa in enumerate(pessoas):
        if pos == 0:
            maipeso = pessoa[1]
            menpeso = pessoa[1]
        else:
            if pessoa[1] >= maipeso:
                maipeso = pessoa[1]
            if pessoa[1] < menpeso:
                menpeso = pessoa[1]
                
    print(f'Ao todo, foram {cadast} pessoas cadastradas')
    print(f'Maior peso {maipeso}Kg')
    print(f'\nMenor peso {menpeso}Kg')

def Ex85():
    valores = list()
    pares = []
    impares = []
    for c in range (1,8):
        while True:
            try:
                valor = int(input(f'Informe {c}ª valor: '))
                break
            except ValueError:
                print('Somente numeros!')
        c +=1
        if valor % 2 == 0:
            pares.append(valor)
        else:
            impares.append(valor)
    valores.append(pares)
    valores.append(impares)
    print(f'Valores pares: ',end='')
    for valor in valores[0]:
        if valor != 0:
            print(valor,end=' ')
    print(f'\nValores impares: ',end='')
    for valor in valores[1]:
        print(valor,end=' ')



if __name__ == "__main__":
    Ex85()