def Teoria():
    # Lista dento de Listas
    teste = list()
    teste.append('Gustavo')
    teste.append(40)
    galera = list()
    # Uma lista dentro de outra lista
    '''galera.append(teste) ''' # Sem a copia
    galera.append(teste[:]) # Feito a copia
    # Quando não é feito a copia qualquer alteração
    # altera tbm os valores
    '''Saida: [['Maria', 21], ['Maria', 21]]'''

    # Modificando os itens do teste
    teste[0] = 'Maria' 
    teste[1] = 21
    galera.append(teste[:])
    print(f'{galera}')
    '''Saida: [['Gustavo', 40], ['Maria', 21]] '''

def Teoria2():
    # Lista dentro de lista
    galera = [['Jonas', 17],['Ana', 21],['Luiz',32],['Juana',12]]
    print(galera)
    print(galera[0]) 
    print(galera[0][0]) 
    print(galera[2][1]) 

    # Exibir cada conjunto de itens 
    for pessoa in galera:
        print(pessoa)
    # Exibir cada conjunto de itens determinando qual
    for pessoa in galera:
        print(f'{pessoa[0]} tem {pessoa[1]} anos')

def Teoria3():
    galera = list()
    dados = list()
    # Salvando dados em galera
    for c in range (0,3):
        dados.append(str(input('Nome: ')))
        dados.append(int(input('Idade: ')))
        galera.append(dados[:]) # Galera recebe uma copia dos dados
        dados.clear() # Limpa dos dados p. recomeça
    
    # Exibindo dados da galera
    for pessoa in galera: 
        print(f'{pessoa[0]} tem {pessoa[1]} anos.')

    # Exibindo maiores de 18 anos
    m18 = 0
    for pessoa in galera:
        if pessoa[1] >= 18:
            print(f'{pessoa[0]} tem mais de 18 anos')
            m18 +=1
    print(f'Temos {m18} maiores de idade')

def Ex84():
    v = 0
    menpeso = maipeso = 0
    dados = list()
    pessoas = list()
    
    while True:
        dados.append(str(input(f'Qual o nome da {v+1} pessoa: ')).strip())
        v +=1
        while True:
            try:
                dados.append(float(input('Qual seu peso: ')))
                break
            except ValueError:
                print('Informe somente peso!')
        while True:
            cond = str(input('Continuar[S/N]: ')).strip().upper()[0]
            if cond in 'SN':
                break
        # Lembrete
        '''Listas compostas não são posiveis de analizer listas internas
        Necessita separa a lista com um for
        Exemplo: 
        for dados in pessoas:
            if dados[1] == 2:
                print('Sua lista interna tem valor 2')
        '''
        # Analize de quem é mais pessado/leve
        if len(pessoas) == 0:
            maipeso = menpeso = dados[1]
        else:
            if dados[1] > maipeso:
                maipeso = dados[1]
            if dados[1] < menpeso:
                menpeso = dados[1]
        # Adiciona os dados na lista principal
        pessoas.append(dados[:]) 
        dados.clear()
        
        if cond == 'N':
            break
                 
    print(f'Ao todo, foram {len(pessoas)} pessoas cadastradas')
    print(f'Maior peso {maipeso}Kg de ',end='')
    for pessoa in pessoas:
        if pessoa[1] == maipeso:
            print(f'[{pessoa[0]}]',end=' ')

    print(f'\nMenor peso {menpeso}Kg de ',end='')
    for pessoa in pessoas:
        if pessoa[1] == menpeso:
            print(f'[{pessoa[0]}]',end=' ')

def Ex85():
    valores = [[], []]
    print('Lista de Pares e Impares..')
    for c in range (1,8):
        while True:
            try:
                while True:
                    valor = int(input(f'Informe {c}ª valor: '))
                    if valor != 0:
                        break
                    else:
                        print('Valor 0 é Neutro!')
                break
            except ValueError:
                print('Somente numeros!')
        if valor % 2 == 0:
            valores[0].append(valor)
        else:
            valores[1].append(valor)
    print('——'*10)
    print('Valores pares: ',end='')
    valores[0].sort()
    for valor in valores[0]:
        print(valor,end=' ')
    print('\nValores impares: ',end='')
    valores[1].sort()
    for valor in valores[1]:
        print(valor,end=' ')

def Ex86p1():
    # minha solução sem vidio
    from time import sleep
    matrix = [[],[],[]] # Posição 0, 1, 2
    pos = local = n= 0
    print('\033[1;37m∿∿'*12)
    print(f'{'\033[36m'}{'Matriz':^24}')
    print('\033[1;37m∿∿'*12)
    while True:
        n +=1
        while True:
            try:
                valor = int(input(f'{n}ª posição [{pos}, {local}]: '))
                break
            except ValueError:
                print('\033[31mSomente numeros!\033[37m')
        local +=1
        matrix[pos].append(valor)
        if local == 3:
            pos +=1
            local = 0
        if pos == 3:
            break
    print('Fazendo Matrix 😋')
    sleep(0.4)
    print('——'*12)
    for valor in matrix[0]:
        print(f'[ {valor} ]',end='')
    print('\n',end='')
    for valor in matrix[1]:
        print(f'[ {valor} ]',end='')
    print('\n',end='')
    for valor in matrix[2]:
        print(f'[ {valor} ]',end='')
def Ex86p2():
    # Com o vidio
    from time import sleep
    matrix = [[0,0,0],[0,0,0],[0,0,0]] # 3 colunas com 3 numeros
    print('\033[1;37m∿∿'*12)
    print(f'{'\033[36m'}{'Matriz':^24}')
    print('\033[1;37m∿∿'*12)
    for coluna in range(0,3): # Coluna
        for pos in range(0,3): # Posição na coluna 
            while True:
                try:
                    matrix[coluna][pos] = int(input(f'Num. de posição [{coluna}, {pos}]: '))
                    break
                except ValueError:
                    print('\033[31mSomente numeros!\033[37m')
    print('Fazendo Matrix 😋')
    sleep(0.4)
    print('——'*12)
    for coluna in range(0,3):
        for pos in range (0,3):
            print(f'[{matrix[coluna][pos]:^3}]',end='')
        print('') # Pular p. proxima linha
def Ex87():
    from time import sleep
    matrix = [[0,0,0],[0,0,0],[0,0,0]] # 3 colunas com 3 numeros
    totpar = colun3 = somapar = maior =0
    print('\033[1;37m∿∿'*12)
    print(f'{'\033[36m'}{'Matriz':^24}')
    print('\033[1;37m∿∿'*12)
    for coluna in range(0,3): # Coluna
        for pos in range(0,3): # Posição na coluna 
            while True:
                try:
                    matrix[coluna][pos] = valor = int(input(f'Num. de posição [{coluna}, {pos}]: '))
                    break
                except ValueError:
                    print('\033[31mSomente numeros!\033[37m')
    print('Fazendo Matrix 😋')
    sleep(0.4)
    print('——'*12)
    for coluna in range(0,3):
        for pos in range (0,3):
            print(f'[{matrix[coluna][pos]:^3}]',end='')
            
            # Todos os Pares
            if matrix[coluna][pos] != 0:
                if matrix[coluna][pos] % 2 == 0:
                    totpar +=1
                    somapar += matrix[coluna][pos]
        print('') # Pular p. proxima linha
    print('——'*12)
    
    # Soma dos valores 3 coluna
    '''for valor in (matrix):
        colun3 += valor[:][2]'''
    
    # O maior valor da 2 coluna
    '''for valor in matrix[1]:
        if valor == matrix[1][0]:
            maior = valor
        else:
            if valor > maior:
                maior = valor'''
    
    if totpar > 0:
        print(f'Foram {totpar} sua soma é {somapar}.')
    else:
        print('Nem um numero par.')
    # Soma 3ª coluna
    for l in range(0,3):
        colun3 += matrix[l][2]
    print(f'Soma 3ª coluna {colun3}.')
    # Maior valor da 2ª linha
    for c in range(0,3):
        if c == 0:
            maior = matrix[1][c]
        else:
            if matrix[1][c] > maior:
                maior = matrix[1][c]
    print(f'Maior da 2ª linha {maior}.')

    
def Ex88():
    from random import randint
    from time import sleep
    c = {
        'l':'\033[m',#limpa
        'n':'\033[1;37m',#negrito
        's':'\033[4;37m',#subliando
        '31':'\033[1;31m', #vemelho
        '32':'\033[1;32m',#verde
        '33':'\033[1;33m',#amarelo
        '34':'\033[1;34m',#azul
        '35':'\033[1;35m',#roxo
        '36':'\033[1;36m',#azul ciano
    }
    sortiados = list()
    print(f'{c["n"]}∿∿'*12)
    print(f'{c["32"]}{'Mega Sena 💸':^24}{c["n"]}')
    print('∿∿'*12)
    while True:
        while True:
            try:
                sort = int(input('Quantos Jogos: '))
                break
            except ValueError:
                print(f'{c["31"]}Somento Numeros!{c['n']}')
                print('——'*10)
        lista = list()
        tot = 0 # contador de total de jogos
        while True:
            # Gerador de sorteio
            cont = 0 # contador de 6
            while True:
                nuns = randint(1,60)
                if nuns not in lista:
                    lista.append(nuns)
                    cont +=1
                if cont == 6:
                    break
            # Add para a lista principal
            lista.sort()
            sortiados.append(lista[:])
            lista.clear()
            tot +=1
            if tot == sort:
                break
        print(f'{c["36"]}Sortiando..{c["n"]}')
        sleep(1)
        print(f'{c["n"]}——'*12)
        print(f'{c["35"]}{'Jogos Sortiados 🍀':^24}{c["n"]}')
        print('——'*12)
        for p, jogo in enumerate(sortiados):
            print(f'{p+1}ª Sort:',end=' ')
            for n in jogo:
                print(f'{n}',end=' ')
                sleep(0.1)
            print()
        sleep(0.5)
        print(f'{'—'*5}< {c["32"]}Boa Sorte{c["n"]} >{'—'*5}-')
        while True:
            cond = str(input('Continuar [S/N]: ')).strip().upper()
            if cond in 'SN':
                break
            else:
                print(f'{c["31"]}Condição [S/N]{c["n"]}')
        if cond == 'N': 
            break
    print('Fim do programa 😊')

def Ex89():
    from time import sleep
    from os import system
    c = {
        'l':'\033[m',#limpa
        'n':'\033[1;37m',#negrito
        's':'\033[4;37m',#subliando
        '31':'\033[1;31m', #vemelho
        '32':'\033[1;32m',#verde
        '33':'\033[1;33m',#amarelo
        '34':'\033[1;34m',#azul
        '35':'\033[1;35m',#roxo
        '36':'\033[1;36m',#azul ciano

    }
    cadastro = list()
    dados = []
    notas = []
    totaln = ativo = cond = 0
    tab = [
        f'{'∿∿'*10}',
        f'{c["35"]}{'Menu de tarefa 😊':^20}{c["n"]}',
        f'{'∿∿'*10}',
        f'{c["35"]}|{c["n"]}1 Mostra lista ',
        f'{c["35"]}|{c["n"]}2 Mostra notas',
        f'{c["35"]}|{c["n"]}3 Mais alunos',
        f'{c["35"]}|{c["n"]}0 Finalizar Tarefas',
        f'{'——'*10}',
    ]
    inf = [
        '> Informe os dados..📖',
        '• Salvo somente 1ªnome',
        '• Média de 4 notas',
        '——'*10,
    ]
    print(f'{c["n"]}•—'*12+'•')
    print(f'{c["36"]}{'Cadastro de Alunos':^25}{c["n"]}')
    print('•—'*12+'•')
    for i in inf:
        print(i)
    while True:
        if ativo == 0:
            while True:
                # Nome aluno
                while True:
                    try:
                        dados.append(str(input(f'Nome {totaln+1}ª aluno: ')).strip().split()[0])
                        break
                    except IndexError:
                        print(f'{c["31"]}Informe o Aluno!{c["n"]}')
                totaln +=1
                # Notas
                while True:
                    try:
                        while len(notas) <= 3:
                            nota = float(input(f'›{c["36"]}{len(notas)+1}ª{c["n"]} Nota : '))
                            if nota > 10:
                                print(f'{c["31"]}Nota invalida!{c["n"]}')
                            else:
                                notas.append(nota)
                        break
                    except ValueError:
                        print(f'{c["31"]}Somente Notas!{c["n"]}')
                # Adicionar dados a lista principal
                tot = 0
                for nota in notas:
                    tot += nota
                dados.append((tot)/4)
                dados.append(notas[:])
                cadastro.append(dados[:])
                dados.clear()
                notas.clear()
                # Condição 
                while True:
                    print('——'*10)
                    while True:
                        try:
                            cond = str(input(f'> Continuar {c["36"]}[S/N]{c["n"]}: ')).strip().upper()[0]
                            break                        
                        except IndexError:
                            print(f'{c['31']}Condição [S/N]{c["n"]}')
                    if cond in 'SN':
                        break
                    else:
                        print(f'{c["31"]}Condição [S/N]{c["n"]}')
                if cond == 'N':
                    ativo = 1
                    print('Analizando..')
                    sleep(2)
                    system('cls')
                    break

        # Lista de Tarefas
        for t in tab:
            print(t)
        while True:
            try:
                while True:
                    cond = int(input(f'Qual tarefa:{c["35"]} '))
                    if cond > 3:
                        print(f'{c["31"]}Operação invalida!{c["n"]}')
                    else:
                        break
                break
            except ValueError:
                print(f'{c["31"]}Somente Numeros!{c["n"]}')
        system('cls')
        print(f'{c["n"]}')    
        # Media dos Alunos
        if cond == 1:
            # Nota de determinado aluno
            print(f'{'∿∿ '}{c['33']}{'Media dos Alunos✍️'}{c["n"]}{' ∿∿'}')
            print('—-'*12)
            print(f'{'Num':<3}{'Nome':>6}{'Média':>12}')
            print('—-'*12)
            for n,dado in enumerate(cadastro):
                print(f'{c["33"]}|{c['n']}{'0' if n+1 <=9 else ''}{n+1}  {dado[0]:<10}{c["33"]}>{c["n"]}{dado[1]:>4.1f}')
            print('—-'*12)
            i = input('Enter continuar...')
            system('cls')
        # Tabela com todas as notas
        elif cond == 2:
            while True:
                print(f'{'∿∿ '}{c["32"]}{'Media dos Alunos ✅'}{c["n"]}{' ∿∿'}')
                print('—-'*12)
                print(f'{'Num':<3}{'Nome':>6}{'Média':>12}')
                print('—-'*12)
                for n,dado in enumerate(cadastro):
                    print(f'{c["32"]}|{c["n"]}{'0' if n+1 <=9 else ''}{n+1}  {dado[0]:<10}{c["32"]}>{c["n"]}{dado[1]:>4.1f}')
                print('—-'*12)
                print(f'{c["32"]}|{c["n"]}99 Todas as Notas')
                print(f'{c["32"]}|{c["n"]}0 Volta para Menu')
                # Pergunta para saber qual aluno 
                while True:
                    try:
                        cond = int(input(f'{c["32"]}>{c["n"]}Ver Aluno:{c["32"]} '))
                        if cond > totaln and cond != 99:
                            print(f'{c["31"]}Aluno não registrado!{c["n"]}')
                        else:   
                            break
                    except ValueError:
                        print(f'{c["31"]}Somente Numeros!{c["n"]}')
                print(f'{c["n"]}',end='')
                if cond == 99:
                    system('cls')
                    cont = 0
                    print('—='*18)
                    print(f'∿∿{'∿∿'*3}> {c["34"]}{'Todas as Notas 📖'}{c["n"]} <{'∿∿'*3}∿')
                    print('=—'*18)
                    sit = [
                        f'> Situações',
                        '✅ - Aprovado✔️ 🎉',
                        '🔄️ - Recuperação🤔📖',
                        '⛔ - Reprovado💢😔',
                    ]
                    
                    for s in sit:
                        print(s)
                    print('——'*18)
                    print(f'{'Nome':<6}{'Notas':>14}{'Situação':>16}')
                    print('——'*18)
                    while cont < totaln:
                        # Nome
                        print(f'|{cadastro[cont][0]:<8}> ',end='')
                        
                        # Notas
                        for nota in cadastro[cont][2]:
                            if 4 <= nota < 6:
                                print(f'{c['33']}{nota}{c['n']}',end=' ')
                            elif nota < 4:
                                print(f'{c['31']}{nota}{c['n']}',end=' ')
                            else:
                                print(f'{c['32']}{nota}{c['n']}',end=' ')
                        
                        # Situação
                        if 4 <= cadastro[cont][1] < 6:
                            print(f' | {'🔄🤔'}') 
                        elif cadastro[cont][1] < 4:
                            print(f' | {'⛔😔'}')
                        else:
                            print(f' | {'✅🤩'}')
                        #(f'\n',end='')
                        print('∿∿'*18)
                        cont +=1
                    i = input('Enter continuar...')
                    system('cls')

                elif cond > 0:
                    print(f'{c["32"]}> {c['n']}{cadastro[cond-1][0]} suas notas: ',end='')
                    for nota in cadastro[cond-1][2]:
                        if 4 <= nota < 6:
                            print(f'{c['33']}{nota}{c['n']}',end=' | ')
                        elif nota < 4:
                            print(f'{c['31']}{nota}{c['n']}',end=' | ')
                        else:
                            print(f'{c['32']}{nota}{c['n']}',end=' | ')
                                    
                    print(f'\nA media é {cadastro[cond-1][1]} está ',end='')
                    if 4 <= cadastro[cond-1][1] < 6:
                        print(f'{c['33']}Recuperação{c['n']}') 
                    elif cadastro[cond-1][1] < 4:
                        print(f'{c['31']}Reprovado{c['n']}')
                    else:
                        print(f'{c['32']}Aprovada{c['n']}')
                    i = input('Enter continuar...')
                    system('cls')
                else:
                    system('cls')
                    break
        # Adicionar Alunos
        elif cond == 3:
            print('-—'*12)
            print(f'{c["36"]}Adicione mais Alunos 🤔{c["n"]}')
            print('—-'*12)
            print(f'{c["36"]}>{c["n"]} Informe os dados..📖')
            ativo = 0
        # Encerra Programa
        else:
            break
    print('Fim do Programa 😊')      

if __name__ == "__main__":
    Ex89()